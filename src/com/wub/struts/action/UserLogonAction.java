/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.wub.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.wub.db.Users;
import com.wub.handlers.AppraisalHandler;
import com.wub.handlers.UserHandler;
import com.wub.struts.form.UserLogonForm;

/** 
 * MyEclipse Struts
 * Creation date: 02-18-2008
 * 
 * XDoclet definition:
 * @struts.action path="/userLogon" name="userLogonForm" input="/form/userLogon.jsp" scope="request" validate="true"
 */
public class UserLogonAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		HttpSession session = request.getSession();
		UserLogonForm userLogonForm = (UserLogonForm) form;
		String userEmail = null, userToken = null;
		
		// Parameter aus Formular holen
		if (userLogonForm != null) {
			userEmail = userLogonForm.getUseremail();
			userToken = userLogonForm.getToken();
		}
		
		if (userEmail == null || userToken == null) {
			// keine Parameter aus Formular gefunden, veruschen aus URL zu holen
			String paramUserEmail = request.getParameter("useremail");
			String paramUserToken = request.getParameter("token");
			
			if (paramUserEmail != null &&
				paramUserEmail.length() > 0 &&
				paramUserToken != null &&
				paramUserToken.length() > 0) {
				// "gültige" Parameter aus der URL gelesen, diese nun für überprüfung speichern
				userEmail = paramUserEmail;
				userToken = paramUserToken;
			}
		}
		
		// nochmaliges überprüfen der Parameter, nun sollte es etwas haben, wenn nicht -> Logonpage
		if (userEmail != null && userToken != null) {
			if (UserHandler.getInstance().checkUserLogon(userEmail, userToken)) {
				/* gültiger Login
				 * ------------------
				 * Zuerst wird das Userobject in der Session gespeichert (für Relogin)
				 */
				Integer userId = AppraisalHandler.getInstance().getUserIdByEmail(userEmail);
				if (userId != null) {
					Users userData = AppraisalHandler.getInstance().getUserById(userId);
					if (userData != null) {
						// Speichern in Session
						session.setAttribute(UserHandler.USERDATA, userData);
						return mapping.findForward("prepareList");
					}
				}
			} else {
				// Logindaten nicht gefunden
				return mapping.findForward("invalidLogin");
			}
		}
		
		

		
		// wenn alles "fehlgeschlagen"
		return mapping.findForward("startUser");
	}
}