/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.wub.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.wub.db.Settings;
import com.wub.handlers.AdminUserHandler;
import com.wub.handlers.SettingsHandler;
import com.wub.struts.form.SettingListForm;

/** 
 * MyEclipse Struts
 * Creation date: 02-13-2008
 * 
 * XDoclet definition:
 * @struts.action scope="request" validate="true"
 */
public class SettingsManagerAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		
		SettingListForm settingListForm = (SettingListForm)form;
		
		if(request.getSession().getAttribute(AdminUserHandler.ADMINDATA) != null) {
			
			List settingList = settingListForm.getSettingList();
			
			SettingsHandler settingHandler = SettingsHandler.getInstance();
			
			// liste iterieren und elemente speichern
			for (Object settingObject : settingList) {
				Settings setting = (Settings)settingObject;
				Settings oldSetting = settingHandler.getSettingById(setting.getSettingId());
				oldSetting.setSettingValue(setting.getSettingValue());
				// speichern
				settingHandler.saveSetting(oldSetting);
			}
			
			// reload der Seite
			return mapping.findForward("refresh");
			
		}
		
		// nicht eingeloggt -> zu startseite leiten
		return mapping.findForward("start");
		
	}
}